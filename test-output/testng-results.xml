<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-25T11:56:52 IST" name="Suite" finished-at="2024-11-25T11:56:53 IST" duration-ms="551">
    <groups>
    </groups>
    <test started-at="2024-11-25T11:56:52 IST" name="Test" finished-at="2024-11-25T11:56:53 IST" duration-ms="551">
      <class name="com.test1.work.extentReport">
        <test-method is-config="true" signature="startReport()[pri:0, instance:com.test1.work.extentReport@5bda8e08]" started-at="2024-11-25T11:56:52 IST" name="startReport" finished-at="2024-11-25T11:56:52 IST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="launchBrowser()[pri:0, instance:com.test1.work.extentReport@5bda8e08]" started-at="2024-11-25T11:56:52 IST" name="launchBrowser" finished-at="2024-11-25T11:56:52 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:com.test1.work.extentReport@5bda8e08]" started-at="2024-11-25T11:56:52 IST" name="getTestResult" finished-at="2024-11-25T11:56:52 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=launchBrowser status=SUCCESS method=extentReport.launchBrowser()[pri:0, instance:com.test1.work.extentReport@5bda8e08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="verifyTittle()[pri:0, instance:com.test1.work.extentReport@5bda8e08]" started-at="2024-11-25T11:56:52 IST" name="verifyTittle" finished-at="2024-11-25T11:56:52 IST" duration-ms="4" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at com.test1.work.extentReport.verifyTittle(extentReport.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTittle -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:com.test1.work.extentReport@5bda8e08]" started-at="2024-11-25T11:56:52 IST" name="getTestResult" finished-at="2024-11-25T11:56:52 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTittle status=FAILURE method=extentReport.verifyTittle()[pri:0, instance:com.test1.work.extentReport@5bda8e08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method signature="verifyemail()[pri:0, instance:com.test1.work.extentReport@5bda8e08]" started-at="2024-11-25T11:56:52 IST" name="verifyemail" finished-at="2024-11-25T11:56:52 IST" duration-ms="3" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the TC with exception..]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the TC with exception..
at com.test1.work.extentReport.verifyemail(extentReport.java:57)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyemail -->
        <test-method is-config="true" signature="getTestResult(org.testng.ITestResult)[pri:0, instance:com.test1.work.extentReport@5bda8e08]" started-at="2024-11-25T11:56:52 IST" name="getTestResult" finished-at="2024-11-25T11:56:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyemail status=SKIP method=extentReport.verifyemail()[pri:0, instance:com.test1.work.extentReport@5bda8e08] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTestResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.test1.work.extentReport@5bda8e08]" started-at="2024-11-25T11:56:52 IST" name="tearDown" finished-at="2024-11-25T11:56:53 IST" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.test1.work.extentReport -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
